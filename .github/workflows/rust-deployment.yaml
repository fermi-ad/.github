name: Continuous Deployment of Rust Applications

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  Build-Push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull from dependency cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install protoc
        uses: arduino/setup-protoc@v1

      - name: Build
        run: cargo build --release --verbose

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: adregistry.fnal.gov/applications/${{ github.event.repository.name }}
          tags: |
            # This is the default tag for the last commit of the default branch
            type=edge
            # This sets the latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.run_number }},enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to AD Registry, Harbor
        uses: docker/login-action@v2
        with:
          registry: adregistry.fnal.gov
          username: ${{ secrets.ADREGISTRY_USERNAME }}
          password: ${{ secrets.ADREGISTRY_SECRET }}

      - name: Building Docker image and pushing to adregistry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
